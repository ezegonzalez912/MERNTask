{"version":3,"sources":["types/index.js","context/projects/projectReducer.js","context/projects/ProjectContext.js","context/tasks/tasksReducer.js","context/tasks/TasksContext.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/layout/Header.js","hooks/useTask.js","components/Projects/Project.js","components/Projects/ListProjects.js","components/Projects/NewProject.js","components/layout/Sidebar.js","components/tasks/Task.js","components/tasks/ListTask.js","components/tasks/TaskForm.js","components/Projects/Projects.js","router/AppRouter.js","App.js","index.js"],"names":["types","projectReducer","state","action","type","form","payload","form_err_validate","projects","project","filter","id","project_active","ProjectContext","createContext","initialProjects","name","ProjectProvider","children","useReducer","dispatch","Provider","value","tasksReducer","tasks_active","tasks","task","projectId","idProject","newTask","task_validate","map","task_active","newName","TasksContext","initialState","TasksProvider","useForm","useState","values","setValues","handleInputChange","target","handleReset","LoginScreen","email","password","className","onSubmit","e","preventDefault","htmlFor","onChange","placeholder","to","RegisterScreen","confirmPass","Header","href","useTask","useContext","removeTask","completedTask","taskActive","taskParams","taskValidate","editTask","addTask","nameTask","uuidv4","tasksActiveReload","Project","tasksDispatch","onClick","ListProjects","useEffect","length","TransitionGroup","CSSTransition","timeout","NewProject","formActive","setTimeout","autoComplete","Sidebar","Task","ListTask","classNames","TaskForm","Projects","AppRouter","path","component","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0766dc9c.chunk.js","sourcesContent":["export const types = {\r\n    form_active: \"[FORM] active\",\r\n    form_validate: \"[FORM] validate\",\r\n\r\n    add_project: \"[PROJECTS] add\",\r\n    get_projects: \"[PROJECTS] get \",\r\n    remove_project: \"[PROJECTS] remove\",\r\n    project_active: \"[PROJECTS] active\",\r\n\r\n    task_add: \"[TASKS] add\",\r\n    task_edit: \"[TASKS] edit\",\r\n    task_remove: \"[TASKS] remove\",\r\n    task_completed: \"[TASKS] completed\",\r\n    tasks_project: \"[TASKS] project\",\r\n    task_validate: \"[TASKS] validate\",\r\n    task_active: \"[TASKS] active\"\r\n}","import { types } from \"../../types\";\r\n\r\nexport const projectReducer = (state, action) => {\r\n    switch(action.type){\r\n        case types.form_active:\r\n            return {...state, form: action.payload.form}\r\n            case types.form_validate:\r\n                return {...state, form_err_validate: action.payload}\r\n        case types.get_projects:\r\n            return {...state, projects: action.payload.projects}\r\n        case types.add_project:\r\n            return {...state, projects: [...state.projects, action.payload.project]}\r\n            case types.remove_project:\r\n                return {...state, projects: state.projects.filter(project => project.id !== action.payload.id)}\r\n        case types.project_active:\r\n            return {...state, project_active: action.payload.project}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useReducer } from \"react\";\r\nimport { projectReducer } from \"./projectReducer\";\r\n\r\nexport const ProjectContext = createContext();\r\n\r\nexport const initialProjects = [\r\n    {id: 1, name: \"Tienda virtual\"},\r\n    {id: 2, name: \"Sitio web personal\"},\r\n    {id: 3, name: \"App movil\"},\r\n    {id: 4, name: \"App web\"}\r\n]\r\n\r\nexport const ProjectProvider = ({children}) => {\r\n    \r\n    const initialState = {\r\n        form: false,\r\n        form_err_validate: false,\r\n        projects: [],\r\n        project_active: null\r\n    }\r\n    \r\n    const [state, dispatch] = useReducer(projectReducer, initialState)\r\n\r\n    return(\r\n        <ProjectContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import { types } from \"../../types\";\r\n\r\nexport const tasksReducer = (state, action) => {\r\n    switch(action.type){\r\n        case types.tasks_project:\r\n            return {\r\n                ...state, \r\n                tasks_active: state.tasks.filter( task => task.projectId === action.payload.idProject)\r\n            }\r\n        case types.task_add:\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, action.payload.newTask]\r\n            }\r\n        case types.task_validate:\r\n            return {\r\n                ...state,\r\n                task_validate: action.payload.state\r\n            }\r\n        case types.task_remove:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(task => task.id !== action.payload.id)\r\n            }\r\n        case types.task_completed:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map( task => task.id === action.payload.id ? {...task, state: !task.state} : task)\r\n            }\r\n        case types.task_active:\r\n            return {\r\n                ...state,\r\n                task_active: action.payload.task\r\n            }\r\n        case types.task_edit:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map( task => task.id === action.payload.id ? {...task, name: action.payload.newName} : task )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createContext, useReducer } from \"react\";\r\nimport { tasksReducer } from \"./tasksReducer\";\r\n\r\nexport const TasksContext = createContext();\r\n\r\nconst initialState = {\r\n    tasks: [\r\n        {id: 1, projectId: 1, name: \"Elegir plataforma\", state: false},\r\n        {id: 2, projectId: 3, name: \"Elegir color\", state: true},\r\n        {id: 3, projectId: 3, name: \"Cambiar posicion\", state: true},\r\n        {id: 4, projectId: 2, name: \"Ir al norte\", state: true},\r\n        {id: 5, projectId: 1, name: \"Modo nocturno\", state: false},\r\n        {id: 6, projectId: 3, name: \"Elegir plataforma\", state: false},\r\n        {id: 7, projectId: 4, name: \"Elegir plataforma\", state: true}\r\n    ],\r\n    tasks_active: [],\r\n    task_validate: false,\r\n    task_active: null\r\n}\r\n\r\nexport const TasksProvider = ({children}) => {\r\n\r\n    const [tasks, dispatch] = useReducer(tasksReducer, initialState);\r\n\r\n    return(\r\n        <TasksContext.Provider value={{tasks, dispatch}}>\r\n            {children}\r\n        </TasksContext.Provider>\r\n    )\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleReset = (name, value = \"\") => {\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, handleReset];\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n\r\n    const {email, password} = values;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Login</h1>\r\n                <form onSubmit={handleLogin}>\r\n                <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            value={email}\r\n                            onChange={handleInputChange}\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Your email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            value={password}\r\n                            onChange={handleInputChange}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Your password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <button type=\"submit\" className=\"btn btn-primario btn-block\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Link className=\"enlace-cuenta\" to=\"register\">Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmPass:\"\"\r\n    })\r\n\r\n    const {name, email, password, confirmPass} = values;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Register</h1>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            value={name}\r\n                            onChange={handleInputChange}\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Your name\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            value={email}\r\n                            onChange={handleInputChange}\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Your email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            value={password}\r\n                            onChange={handleInputChange}\r\n                            id=\"confirmar\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Your password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Confirm password</label>\r\n                        <input\r\n                            value={confirmPass}\r\n                            onChange={handleInputChange}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"confirmPass\"\r\n                            placeholder=\"Confirm password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <button type=\"submit\" className=\"btn btn-primario btn-block\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <Link className=\"enlace-cuenta\" to=\"/login\">I have account</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <p className=\"nombre-usuario\">Hi <span>Ezequiel</span></p>\r\n\r\n            <nav className=\"nav-principal\">\r\n                <a href=\"#!\">Logout</a>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import { useContext } from \"react\"\r\nimport { TasksContext } from \"../context/tasks/TasksContext\"\r\nimport { types } from \"../types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ProjectContext } from \"../context/projects/ProjectContext\";\r\n\r\nexport const useTask = (task) => {\r\n\r\n    const {tasks, dispatch} = useContext(TasksContext);\r\n    const {state} = useContext(ProjectContext)\r\n\r\n    const removeTask = () => {\r\n        dispatch({type: types.task_remove, payload: {id: task.id}})\r\n        dispatch({type: types.tasks_project, payload: {idProject: task.projectId}})\r\n    }\r\n\r\n    const completedTask = () => {\r\n        dispatch({type: types.task_completed, payload: {id: task.id}})\r\n        dispatch({type: types.tasks_project, payload: {idProject: task.projectId}})\r\n    }\r\n\r\n    const taskActive = (taskParams= null) => {\r\n        dispatch({type: types.task_active, payload: {task: taskParams}})\r\n    }\r\n\r\n    const taskValidate = (state) => {\r\n        dispatch({type: types.task_validate, payload: {state: state}})\r\n    }\r\n\r\n    const editTask = (newName) => {\r\n        dispatch({type: types.task_edit, payload: {id: tasks.task_active.id, newName: newName}})\r\n    }\r\n\r\n    const addTask = (nameTask) => {\r\n        dispatch({type: types.task_add, payload: {\r\n            newTask: {id: uuidv4(), projectId: state.project_active.id, name: nameTask, state: false}\r\n        }})\r\n    }\r\n\r\n    const tasksActiveReload = () => {\r\n        dispatch({type: types.tasks_project, payload: {idProject: state.project_active.id}})\r\n    }\r\n\r\n    return {removeTask, completedTask, taskActive, taskValidate, editTask, addTask, tasksActiveReload}\r\n}\r\n","import { useContext } from \"react\"\r\nimport { ProjectContext } from \"../../context/projects/ProjectContext\"\r\nimport { TasksContext } from \"../../context/tasks/TasksContext\"\r\nimport { useTask } from \"../../hooks/useTask\"\r\nimport { types } from \"../../types\"\r\n\r\nexport const Project = ({project}) => {\r\n    \r\n    const {dispatch} = useContext(ProjectContext)\r\n    const {tasks, dispatch: tasksDispatch} = useContext(TasksContext);\r\n    const {taskActive} = useTask(tasks.task_active)\r\n\r\n    const activeProject = () => {\r\n        dispatch({type: types.project_active, payload: {\r\n            project: project\r\n        }})\r\n        tasksDispatch({type: types.tasks_project, payload: {idProject: project.id}})\r\n        taskActive()\r\n    }\r\n\r\n    return (\r\n        <li>\r\n           <button\r\n            type=\"button\"\r\n            className=\"btn btn-blank\"\r\n            onClick={activeProject}\r\n           >{project.name}</button> \r\n        </li>\r\n    )\r\n}\r\n","import { useContext, useEffect } from \"react\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { initialProjects, ProjectContext } from \"../../context/projects/ProjectContext\";\r\nimport { types } from \"../../types\";\r\nimport { Project } from \"./Project\"\r\n\r\nexport const ListProjects = () => {\r\n\r\n    const {state, dispatch} = useContext(ProjectContext);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: types.get_projects, \r\n            payload: {\r\n                projects: initialProjects\r\n            }\r\n        })\r\n    }, [dispatch])\r\n    \r\n    const {projects} = state;\r\n\r\n    return (\r\n        <>\r\n        {\r\n            projects.length===0 ?\r\n            <ul>I dont projects</ul>\r\n            :\r\n            <ul className=\"listado-proyectos\">\r\n                <TransitionGroup>\r\n                {\r\n                    projects.map( project => (\r\n                        <CSSTransition key={project.id} timeout={400} className=\"item\">\r\n                            <Project project={project}/>\r\n                            </CSSTransition>\r\n                ))\r\n                }\r\n                </TransitionGroup>\r\n            </ul>\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import { useContext } from \"react\"\r\nimport { ProjectContext } from \"../../context/projects/ProjectContext\"\r\nimport { useForm } from \"../../hooks/useForm\"\r\nimport { types } from \"../../types\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const NewProject = () => {\r\n\r\n    const {state, dispatch} = useContext(ProjectContext)\r\n\r\n    const [values, handleInputChange, handleReset] = useForm({name: \"\"})\r\n\r\n    const formActive = (value) => {\r\n        dispatch({type: types.form_active, payload: {\r\n            form: value\r\n        }})\r\n    }\r\n\r\n    const handleProject = (e) => {\r\n        e.preventDefault();\r\n        if(values.name.length < 5){\r\n            dispatch({type: types.form_validate, payload: true})\r\n            setTimeout(() => {\r\n                dispatch({type: types.form_validate, payload: false})\r\n            }, 1500);\r\n            return;\r\n        }\r\n        dispatch({type: types.add_project, payload: {\r\n            project: {id: uuidv4(), name: values.name}\r\n        }})\r\n        handleReset(\"name\")\r\n        formActive(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-primario btn-block\"\r\n            onClick={() => formActive(true)}\r\n        >New project</button>\r\n        {\r\n            state.form &&\r\n            <form className=\"formulario-nuevo-proyecto\" onSubmit={handleProject}>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Project name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={values.name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-block\"\r\n                    value=\"Add project\"\r\n                />\r\n            </form>\r\n        }\r\n        {state.form_err_validate && \r\n        <p className=\"mensaje error\">The project name is invalid</p>}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListProjects } from '../Projects/ListProjects'\r\nimport { NewProject } from '../Projects/NewProject'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    return (\r\n        <aside>\r\n            <h1>MERN<span>TASKS</span></h1>\r\n            <NewProject />\r\n            <div className=\"proyectos\">\r\n                <h2>Your projects</h2>\r\n                <ListProjects />\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useTask } from '../../hooks/useTask';\r\n\r\nexport const Task = ({task}) => {\r\n\r\n    const {removeTask, completedTask, taskActive} = useTask(task);\r\n\r\n    return (\r\n        <li className=\"tarea sombra\">\r\n            <p>{task.name}</p>\r\n            <div className=\"estado\">\r\n                <button \r\n                    className={task.state ? \"completo\" : \"incompleto\"} \r\n                    onClick={completedTask}\r\n                >\r\n                    {task.state ? \"completo\" : \"incompleto\"}\r\n                </button>\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button className=\"btn btn-primario\" onClick={() => taskActive(task)}>Edit</button>\r\n                <button className=\"btn btn-primario\" onClick={removeTask}>Remove</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ProjectContext } from '../../context/projects/ProjectContext'\r\nimport { TasksContext } from '../../context/tasks/TasksContext'\r\nimport { types } from '../../types'\r\nimport { Task } from './Task'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nexport const ListTask = () => {\r\n\r\n    const {state, dispatch} = useContext(ProjectContext);\r\n    const {tasks} = useContext(TasksContext);\r\n\r\n    const {project_active: project} = state;\r\n\r\n    const removeProject = () => {\r\n        dispatch({type: types.remove_project, payload: {id: project.id}})\r\n        dispatch({type: types.project_active, payload: {project: null}})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {project ? <>\r\n                <h2>Project: {project.name}</h2>\r\n                <ul className=\"listando-tareas\">\r\n                    {\r\n                        tasks.tasks_active.length === 0 ? <li>I dont have task</li>\r\n                        : \r\n                        <TransitionGroup>\r\n                            {tasks.tasks_active.map(task => (\r\n                                <CSSTransition \r\n                                    key={task.id} \r\n                                    timeout={500}\r\n                                    classNames=\"item\"\r\n                                >\r\n                                    <Task task={task} />\r\n                                </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                    }\r\n                </ul>\r\n                <button \r\n                    className=\"btn btn-eliminar\" \r\n                    onClick={removeProject}\r\n                >Remove project</button>\r\n            </>\r\n            : <h2>select a project</h2>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useContext, useEffect } from \"react\"\r\nimport { ProjectContext } from \"../../context/projects/ProjectContext\"\r\nimport { TasksContext } from \"../../context/tasks/TasksContext\"\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useTask } from \"../../hooks/useTask\";\r\n\r\nexport const TaskForm = () => {\r\n\r\n    const {state} = useContext(ProjectContext)\r\n    const {tasks} = useContext(TasksContext)\r\n\r\n    const {project_active} = state;\r\n\r\n    const [values, handleInputChange, handleReset] = useForm({name: \"\"})\r\n\r\n    useEffect(() => {\r\n        if(tasks.task_active !== null){\r\n            handleReset(\"name\", tasks.task_active.name)\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [tasks.task_active])\r\n\r\n    const {taskActive, taskValidate, editTask, addTask, tasksActiveReload} = useTask(tasks.task_active);\r\n    \r\n    const handleTask = (e) => {\r\n        e.preventDefault() \r\n        \r\n        if(values.name.length < 4){\r\n            taskValidate(true)\r\n            setTimeout(() => {\r\n                taskValidate(false)\r\n            }, 1500);\r\n            return;\r\n        }\r\n\r\n        if(tasks.task_active !==null){\r\n            editTask(values.name)\r\n        }else{\r\n            addTask(values.name)\r\n        }\r\n\r\n        tasksActiveReload()\r\n        taskActive()\r\n        handleReset(\"name\")\r\n    }\r\n    \r\n    if(!project_active) return null;\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n            <form onSubmit={handleTask}>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Name task\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value={tasks.task_active ? \"Edit task\" : \"Add task\"}\r\n                    />\r\n                </div>\r\n            </form>\r\n            {tasks.task_validate && <p className=\"mensaje error\">the task name is invalid</p>}\r\n        </div>\r\n    )\r\n}\r\n","import { Header } from \"../layout/Header\"\r\nimport { Sidebar } from \"../layout/Sidebar\"\r\nimport { ListTask } from \"../tasks/ListTask\"\r\nimport { TaskForm } from \"../tasks/TaskForm\"\r\n\r\nexport const Projects = () => {\r\n    return (\r\n        <div className=\"contenedor-app\">\r\n            <Sidebar />\r\n            <div className=\"seccion-principal\">\r\n                <main>\r\n                    <Header />\r\n                    <TaskForm />\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListTask />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\"\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\"\r\nimport { Projects } from \"../components/Projects/Projects\"\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/login\" component={LoginScreen} />\r\n                <Route path=\"/register\" component={RegisterScreen} />\r\n                <Route exact path=\"/\" component={Projects} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { ProjectProvider } from \"./context/projects/ProjectContext\";\nimport { TasksProvider } from \"./context/tasks/TasksContext\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nfunction App() {\n  return (\n    <ProjectProvider>\n      <TasksProvider>\n        <AppRouter />\n      </TasksProvider>\n    </ProjectProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}